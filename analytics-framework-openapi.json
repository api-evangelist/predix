{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Analytics Framework",
        "description": "",
        "termsOfService": ""
    },
    "servers": [
        "https\/"
    ],
    "paths": {
        "\/api\/v1\/analytic\/execution": {
            "post": {
                "summary": "Execute the analytic synchronously.",
                "description": "Execute the analytic synchronously with the given execution payload.",
                "operationId": "SynchronousExecution",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/analytic\/execution\/async": {
            "post": {
                "summary": "Execute the analytic asynchronously using input data.",
                "description": "Execute the analytic asynchronously with the given input data payload.",
                "operationId": "AsynchronousExecution",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/analytic\/execution\/async\/{requestId}": {
            "delete": {
                "summary": "Cleanup analytic execution result by request id.",
                "description": "Removes the analytic execution result from the cache. It is highly recommended to clean your old result data to have room for future result data.",
                "operationId": "ClearAnalyticExecutionResult",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/analytic\/execution\/async\/{requestId}\/result": {
            "get": {
                "summary": "Get the analytic execution result by request id.",
                "description": "Returns the analytic execution result.",
                "operationId": "RetrieveAnalyticExecutionResult",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/analytic\/execution\/async\/{requestId}\/status": {
            "get": {
                "summary": "Get the analytic execution status by request id.",
                "description": "Returns the analytic execution status (one of QUEUED, PROCESSING, COMPLETED, or FAILED).",
                "operationId": "RetrieveAnalyticExecutionStatus",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/analytics\/customdata\/healthcheck": {
            "get": {
                "summary": "Healthcheck for custom datasource.",
                "description": "Indicates whether custom data connector is up and running.",
                "operationId": "Healthcheck",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/api\/v1\/analytics\/customdata\/read": {
            "post": {
                "summary": "Retrieve analytic input data from custom datasource.",
                "description": "Returns the analytic input data used during runtime execution.",
                "operationId": "ReadCustomProviderData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/analytics\/customdata\/write": {
            "post": {
                "summary": "Write analytic output data to custom datasource.",
                "description": "Writes analytic output data generated during runtime execution.",
                "operationId": "WriteCustomProviderData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics": {
            "get": {
                "summary": "Get all analytic catalog entries.",
                "description": "Returns all analytic catalog entries as specified by page and sort criteria.",
                "operationId": "RetrieveAll",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page index : zero-based page index"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "page size : between 1 and 1000 inclusive"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sort order : asc | desc"
                    },
                    {
                        "name": "sortableFields",
                        "in": "query",
                        "description": "sortable fields : name"
                    },
                    {
                        "name": "taxonomyPath",
                        "in": "query",
                        "description": "taxonomy path : taxonomyPath"
                    }
                ]
            },
            "post": {
                "summary": "Create an analytic catalog entry.",
                "description": "Creates the analytic catalog entry with a generated id.",
                "operationId": "CreateAnalyticCatalogEntry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/versions": {
            "get": {
                "summary": "Get all versions of the analytic catalog entry with the given name.",
                "description": "Returns all versions of the analytic catalog entry with the given name.",
                "operationId": "RetrieveByName",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "analytic name"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}": {
            "get": {
                "summary": "Get an analytic catalog entry by id.",
                "description": "Returns the analytic catalog entry with the given id.",
                "operationId": "RetrieveAnalyticCatalogEntryById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            },
            "put": {
                "summary": "Update an analytic catalog entry by id.",
                "description": "The analytic catalog entry with the given id will be updated.",
                "operationId": "UpdateAnalyticCatalogEntry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            },
            "delete": {
                "summary": "Delete an analytic catalog entry by id.",
                "description": "Deletes the analytic catalog entry with the given id.",
                "operationId": "DeleteAnalyticCatalogEntryById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/artifacts": {
            "get": {
                "summary": "Get the descriptive information of the artifacts corresponding to an analytic catalog entry.",
                "description": "Returns the description information (type, description, etc.) for all artifacts associated with the given analytic catalog entry id. Note: it does not return the artifact file contents; use the download APIs to obtain an artifact file. An error is returned if the supplied analytic catalog entry id does not exist.",
                "operationId": "RetrieveArtifactsByCatalogEntryId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/deployment": {
            "post": {
                "summary": "Deploy an analytic with an optional deployment configuration by analytic catalog entry id.",
                "description": "This operation FORCE deploys the specified analytic into the Cloud Foundry environment with an optional deployment configuration, responds with the request id (generated for the request), and the current request status.  The force deploy usually takes longer than the standard timeout, so the calling process should use the returned request id to monitor the request status and to retrieve the deployment results.",
                "operationId": "DeployAnalytic",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/deployment\/{requestId}": {
            "get": {
                "summary": "Get the analytic deployment status by request id.",
                "description": "Returns the analytic deployment status (one of 'queued,' 'processing,' or 'completed').",
                "operationId": "RetrieveAnalyticDeploymentResult",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/execution": {
            "post": {
                "summary": "Execute an analytic by analytic catalog entry id.",
                "description": "This operation executes the specified analytic and responds with the result produced by analytic.",
                "operationId": "ExecuteAnalytic",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "inputId",
                        "in": "query",
                        "description": "test artifact id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/logs": {
            "get": {
                "summary": "Get the analytic recent logs",
                "description": "Return the recent analytic logs",
                "operationId": "RetrieveAnalyticLog",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/validation": {
            "post": {
                "summary": "Validate an analytic by analytic catalog entry id.",
                "description": "This operation FORCE deploys the specified analytic into the Cloud Foundry environment, runs the analytic and responds with the validation request id (generated for the request), and the current request status.  The force deploy usually takes longer than the standard timeout, so the calling process should use the returned validation request id to monitor the request status and to retrieve the validation results.",
                "operationId": "ValidateAnalytic",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "inputId",
                        "in": "query",
                        "description": "test artifact id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            },
            "delete": {
                "summary": "Undeploy test analytics.",
                "description": "This operation un-deploys the analytic app from the Cloud Foundry environment only if the analytic has been validated for testing purposes. This api will not un-deploy production analytics.",
                "operationId": "InvalidateAnalytic",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{id}\/validation\/{validationRequestId}": {
            "get": {
                "summary": "Get the analytic validation status by validation request id.",
                "description": "Returns the analytic validation status (one of 'queued,' 'processing,' or 'completed' and the result from running the analytic (when status is 'completed').",
                "operationId": "RetrieveAnalyticValidationResult",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "validationRequestId",
                        "in": "path",
                        "description": "analytic validation request id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/analytics\/{name}\/versions": {
            "delete": {
                "summary": "Delete all versions of the named analytic.",
                "description": "Given the name of an analytic, this API deletes all its versions.",
                "operationId": "DeleteAllVersions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "analytic name"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/artifacts": {
            "post": {
                "summary": "Upload an artifact and attach it to an analytic catalog entry.",
                "description": "Upload a single artifact file in a multipart MIME structure and attach it to an analytic catalog entry. The multipart MIME structure must have the catalog entry id tagged as 'catalogEntryId',  the file contents tagged as 'file',  the artifact type tagged as 'type', and  a description (under 1024 characters) tagged as 'description'. Artifact types can be any string.  Artifacts with the type 'executable' must contain the executable for the analytic.   An analytic can only have 1 artifact labelled ",
                "operationId": "UploadAnalyticArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "catalogEntryId",
                        "in": "formData",
                        "description": "(Required) analytic catalog entry id"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "(Required) artifact type"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/artifacts\/{id}": {
            "put": {
                "summary": "Update an artifact by id.",
                "description": "Update an artifact in the catalog with the contents of the supplied multipart MIME structure. The multipart MIME structure may have any of the following: new file contents tagged as 'file',  a new artifact type tagged as 'type', and  a new description (under 1024 characters) tagged as 'description'. Artifact types can be any string.  Artifacts with the type 'executable' must contain the executable for the analytic.   An analytic can only have 1 artifact labelled as 'executable' (See the document",
                "operationId": "UpdateAnalyticArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "(Required) artifact type"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            },
            "delete": {
                "summary": "Delete an artifact by id.",
                "description": "Deletes the artifact by artifact id.",
                "operationId": "DeleteAnalyticArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/artifacts\/{id}\/file": {
            "get": {
                "summary": "Download an artifact file by id.",
                "description": "The file is downloaded as an octet-stream.",
                "operationId": "DownloadAnalyticArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/catalog\/taxonomy": {
            "get": {
                "summary": "Retrieve the full taxonomy.",
                "description": "This operation retrieves the full taxonomy structure from the catalog.",
                "operationId": "RetrieveFullTaxonomy",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Load a taxonomy.",
                "description": "This operation loads the supplied taxonomy structure into catalog. If a taxonomy already exists in the catalog, new paths in the supplied structure will be added. It will not delete existing paths. ",
                "operationId": "LoadTaxonomy",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/execution": {
            "post": {
                "summary": "Execute the specified orchestration.",
                "description": "To successfully execute the orchestration, the OrchestrationRequest must contain valid orchestration id, bpmn workflow xml and optionally input data for each analytic step defined in the workflow. ",
                "operationId": "Run",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v1\/monitoring\/orchestrations\/{orchestrationRequestId}": {
            "get": {
                "summary": "Retrieve orchestration execution result",
                "description": "Returns orchestration execution result for the given orchestration request id.",
                "operationId": "RetrieveOrchestrationResult",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "orchestrationRequestId",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v1\/scheduler\/jobs": {
            "get": {
                "summary": "Get all job definition entries.",
                "description": "Returns all job definition entries as specified by page and sort criteria.",
                "operationId": "RetrieveAllJobs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page index : zero-based page index"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "page size : between 1 and 1000 inclusive"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sort order : asc | desc"
                    }
                ]
            },
            "post": {
                "summary": "Create a scheduler job.",
                "description": "Creates the scheduler job with a generated id. Set the state value to 'Active' to start the job. Set the state value to 'Inactive' to avoid starting the job.",
                "operationId": "CreateJob",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "Refresh",
                        "in": "header",
                        "description": "Refresh-Token-For-Job-Execution"
                    }
                ]
            }
        },
        "\/api\/v1\/scheduler\/jobs\/{id}": {
            "get": {
                "summary": "Get a scheduler job by id.",
                "description": "Returns the scheduler job with the given id.",
                "operationId": "RetrieveJob",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            },
            "put": {
                "summary": "Update an existing scheduler job.",
                "description": "Updates the scheduled job. The updated changes will be effective from the next scheduling of this job. To suspend a job, update the job with state value 'Inactive'. To resume a job, update the job with state value 'Active'.",
                "operationId": "UpdateJob",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "Refresh",
                        "in": "header",
                        "description": "Refresh-Token-For-Job-Execution"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            },
            "delete": {
                "summary": "Delete job definition.",
                "description": "Delete job definition for the given job id.",
                "operationId": "DeleteJob",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    }
                ]
            }
        },
        "\/api\/v1\/scheduler\/jobs\/{id}\/history": {
            "get": {
                "summary": "Retrieve job execution history of the given job.",
                "description": "Retrieve job execution history",
                "operationId": "RetrieveJobHistory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Start time in millis"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "End time in millis"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations": {
            "get": {
                "summary": "Get all orchestration configuration entries.",
                "description": "Returns all orchestration configuration entries as specified by page and sort criteria.",
                "operationId": "RetrieveAllOrchConfigs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page index : zero-based page index"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "page size : between 1 and 1000 inclusive"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sort order : asc | desc"
                    },
                    {
                        "name": "sortableFields",
                        "in": "query",
                        "description": "sortable fields : name"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "post": {
                "summary": "Create an orchestration configuration entry.",
                "description": "Creates the orchestration configuration entry with a generated id.",
                "operationId": "CreateOrchestrationEntry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/artifacts": {
            "post": {
                "summary": "Upload an artifact and attach it to an orchestration configuration entry.",
                "description": "Upload a single artifact file in a multipart MIME structure and attach it to an orchestration configuration entry. The multipart MIME structure must have the orchestration entry id tagged as 'orchestrationEntryId',  the file contents tagged as 'file',  the artifact type tagged as 'type', and  the name of artifact tagged as 'name'.  A description (under 1024 characters) tagged as 'description' can be optionally specified. Artifact types can be either 'portToFieldMap', 'bpmn' or any.   If the arti",
                "operationId": "UploadOrchConfigArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "orchestrationEntryId",
                        "in": "formData",
                        "description": "(Required) orchestration configuration entry id"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "(Required) artifact type"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "(Required) Artifact name"
                    },
                    {
                        "name": "stepId",
                        "in": "formData",
                        "description": "Orchestration Step ID"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/artifacts\/{id}": {
            "put": {
                "summary": "Update an artifact by id.",
                "description": "Update the artifact of the orchestration configuration with the contents of the supplied multipart MIME structure. The multipart MIME structure may have new file contents tagged as 'file',  new artifact type tagged as 'type',  new name of artifact tagged as 'name',  new description (under 1024 characters) tagged as 'description', and  new value of the orchestration step id tagged as 'stepId.   Artifact types can be either 'portToFieldMap', 'bpmn' or any.  (See the documentation for more informat",
                "operationId": "UpdateOrchConfigArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "(Required) artifact type"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "(Required) Artifact name"
                    },
                    {
                        "name": "stepId",
                        "in": "formData",
                        "description": "Orchestration Step ID"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            },
            "delete": {
                "summary": "Delete an orchestration artifact by id.",
                "description": "Delete the orchestration artifact by artifact id.",
                "operationId": "DeleteOrchConfigArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/artifacts\/{id}\/file": {
            "get": {
                "summary": "Download an orchestration artifact file by id.",
                "description": "The file is downloaded as an octet-stream.",
                "operationId": "DownloadOrchConfigArtifact",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/defaulttagquery": {
            "get": {
                "summary": "Get the default tag query corresponding for the tenant.",
                "description": "Returns all information (query string, fieldnamespecifier, tagnamespecifer, description etc.) associated with the default tag query. An error is returned if tag query does not exist for the tenant.",
                "operationId": "RetrieveDefaultTagQuery",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "post": {
                "summary": "Create the default tag query corresponding for the tenant.",
                "description": "Creates the default tag query including all information (query string, fieldnamespecifier, tagnamespecifer, description etc.) associated with the query.",
                "operationId": "CreateDefaultTagQuery",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "put": {
                "summary": "Update the default tag query for the tenant.",
                "description": "Updates the default tag query including all information (query string, fieldnamespecifier, tagnamespecifer, description etc.) associated with the query.",
                "operationId": "UpdateDefaultTagQuery",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "delete": {
                "summary": "Delete the default tag query for the tenant.",
                "description": "Deletes the default tag query.",
                "operationId": "DeleteDefaultTagQuery",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/models": {
            "get": {
                "summary": "Get all model entries.",
                "description": "Returns all model entries as specified by page and sort criteria. By default, retrieves all models for tenant. If additional query params specified, then results will be filtered",
                "operationId": "RetrieveAllModels",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "modelKey",
                        "in": "query",
                        "description": "Model Key"
                    },
                    {
                        "name": "modelName",
                        "in": "query",
                        "description": "Model Name"
                    },
                    {
                        "name": "modelVersion",
                        "in": "query",
                        "description": "Model Version"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page index : zero-based page index"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "page size : between 1 and 1000 inclusive"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "post": {
                "summary": "Upload a model.",
                "description": "Upload a model in a multipart MIME structure. The multipart MIME structure must have the modelKey  tagged as 'modelKey',  the modelName  tagged as 'modelName',  the modelVersion  tagged as 'modelVersion',  the file contents tagged as 'file',  a description (under 1024 characters) tagged as 'description'. (See the documentation for more information regarding these files.)",
                "operationId": "UploadModel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "modelKey",
                        "in": "formData",
                        "description": "(Required) Model Key"
                    },
                    {
                        "name": "modelName",
                        "in": "formData",
                        "description": "(Required) Model Name"
                    },
                    {
                        "name": "modelVersion",
                        "in": "formData",
                        "description": "(Required) Model Version"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/models\/{id}": {
            "put": {
                "summary": "Update model by id.",
                "description": "Update a model with attributes of the supplied multipart MIME structure. The multipart MIME structure must have the modelKey  tagged as 'modelKey',  the modelName  tagged as 'modelName',  the modelVersion  tagged as 'modelVersion',  the file contents tagged as 'file',  a description (under 1024 characters) tagged as 'description'. (See the documentation for more information regarding these files.)",
                "operationId": "UpdateModel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "(Required) artifact file"
                    },
                    {
                        "name": "modelKey",
                        "in": "formData",
                        "description": "(Required) Model Key"
                    },
                    {
                        "name": "modelName",
                        "in": "formData",
                        "description": "(Required) Model Name"
                    },
                    {
                        "name": "modelVersion",
                        "in": "formData",
                        "description": "(Required) Model Version"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "artifact description"
                    }
                ]
            },
            "delete": {
                "summary": "Delete a model by id.",
                "description": "Delete a model by model id.",
                "operationId": "DeleteModel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/models\/{id}\/file": {
            "get": {
                "summary": "Download a model file by id.",
                "description": "The file is downloaded as an octet-stream.",
                "operationId": "DownloadModel",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/{id}": {
            "get": {
                "summary": "Get an orchestration configuration entry by id.",
                "description": "Returns the orchestration configuration entry with the given id.",
                "operationId": "RetrieveOrchestrationEntryById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "put": {
                "summary": "Update an existing orchestration configuration entry.",
                "description": "Updates the orchestration configuration entry with given orchestration configuration.",
                "operationId": "UpdateOrchestrationEntry",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            },
            "delete": {
                "summary": "Delete an orchestration configuration entry by id.",
                "description": "Deletes the orchestration configuration entry with the given id.",
                "operationId": "DeleteOrchestrationEntryById",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/{id}\/artifacts": {
            "get": {
                "summary": "Get the descriptive information of the orchestration artifacts corresponding to an orchestration configuration entry.",
                "description": "Returns the description information (type, description, etc.) for all orchestration artifacts associated with the given configuration entry id. Note: it does not return the orchestration artifact file contents; use the download APIs to obtain an artifact file. An error is returned if the supplied orchestration configuration entry id does not exist.",
                "operationId": "RetrieveArtifactsByOrchestrationEntryId",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/config\/orchestrations\/{id}\/file": {
            "get": {
                "summary": "Download an orchestration artifact file by orchestration id and artifact type.",
                "description": "The file is downloaded as an octet-stream. If the type is bpmn, then then bpmn xml is downloaded. If the type is portToFieldMap, then the system expects analyticStepId to download the portToFieldMap for the given step",
                "operationId": "DownloadArtifactByType",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "analytic catalog entry id"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "artifact type (Ex. \"bpmn\", \"portToFieldMap\")"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "analytic name"
                    },
                    {
                        "name": "Predix",
                        "in": "header",
                        "description": "Predix-Zone-Id"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization"
                    }
                ]
            }
        },
        "\/api\/v2\/execution": {
            "post": {
                "summary": "Execute the specified orchestration.",
                "description": "To successfully execute the orchestration, the OrchestrationExecutionRequest must contain valid orchestration id, asset id, asset data field mapping details. This API will execute the orchestration in synchronous mode and if the execution is not completed  in 1 minute then the request will fail. After successful completion, the response will contain each orchestration steps output data.",
                "operationId": "RunSyncV2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v2\/execution\/async": {
            "post": {
                "summary": "Execute the specified orchestration in asynchronous mode.",
                "description": "To successfully execute the orchestration, the OrchestrationExecutionRequest must contain valid orchestration id, asset id, asset data field mapping details. ",
                "operationId": "RunAsync",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "request payload containing analytic input data"
                    }
                ]
            }
        },
        "\/api\/v2\/execution\/orchestrations\/{orchConfigId}\/deployment": {
            "post": {
                "summary": "Deploy the specified orchestration workflow file to the Orchestration Engine.",
                "description": "This API will deploy the BPMN file associated with the specified orchestration configuration to the Orchestration Engine in preparation for orchestration execution.",
                "operationId": "RetrieveAndDeployBpmn",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "orchConfigId",
                        "in": "path",
                        "description": "orchestration configuration id"
                    }
                ]
            }
        },
        "\/api\/v2\/execution\/testrun": {
            "post": {
                "summary": "Execute the orchestration with given bpmn and input data.",
                "description": "To successfully execute the orchestration, the request must contain valid bpmn20.xml, input data for each step in the bpmn.",
                "operationId": "TestRun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "bpmn",
                        "in": "formData",
                        "description": "BPMN file"
                    },
                    {
                        "name": "input",
                        "in": "formData",
                        "description": "Input data file"
                    }
                ]
            }
        },
        "\/api\/v2\/execution\/validation": {
            "post": {
                "summary": "Validate the specified orchestration and the health of all the analytics used in the orchestration.",
                "description": "To successfully validate the orchestration, the BPMN XML file must reference analytics that are running. The validation will call a 'healthCheck' entry on each analytic.  Analytics in the platform automatically have this entry, analytics outside the platform must implement this APIfor their validation to pass.  The results contain the http status for each for the healthCheck call to each analytic.",
                "operationId": "Validate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "file",
                        "in": "body",
                        "description": "(Required) artifact file"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AnalyticCatalogEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "author": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "version": {
                        "description": "",
                        "type": "post"
                    },
                    "supportedLanguage": {
                        "description": "",
                        "type": "post"
                    },
                    "customMetadata": {
                        "description": "",
                        "type": "post"
                    },
                    "taxonomyLocation": {
                        "description": "",
                        "type": "post"
                    },
                    "state": {
                        "description": "",
                        "type": "post"
                    },
                    "access": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticCatalogEntryList": {
                "type": "object",
                "properties": {
                    "analyticCatalogEntries": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticCatalogEntryPage": {
                "type": "object",
                "properties": {
                    "currentPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "maximumPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "currentPageNumber": {
                        "description": "",
                        "type": "post"
                    },
                    "totalElements": {
                        "description": "",
                        "type": "post"
                    },
                    "totalPages": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticCatalogEntries": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticData": {
                "type": "object",
                "properties": {
                    "analyticStepId": {
                        "description": "",
                        "type": "post"
                    },
                    "data": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticDeploymentConfiguration": {
                "type": "object",
                "properties": {
                    "memory": {
                        "description": "",
                        "type": "post"
                    },
                    "diskQuota": {
                        "description": "",
                        "type": "post"
                    },
                    "instances": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticDeploymentResult": {
                "type": "object",
                "properties": {
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "requestId": {
                        "description": "",
                        "type": "post"
                    },
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "message": {
                        "description": "",
                        "type": "post"
                    },
                    "inputConfigData": {
                        "description": "",
                        "type": "post"
                    },
                    "result": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticExecutionResult": {
                "type": "object",
                "properties": {
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "message": {
                        "description": "",
                        "type": "post"
                    },
                    "inputData": {
                        "description": "",
                        "type": "post"
                    },
                    "result": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticExecutionStatus": {
                "type": "object",
                "properties": {
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "requestId": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticExecutionState": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticReadDataRequest": {
                "type": "object",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "post"
                    },
                    "customAttributes": {
                        "description": "",
                        "type": "post"
                    },
                    "systemAttributes": {
                        "description": "",
                        "type": "post"
                    },
                    "dataSourceId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticReadDataResponse": {
                "type": "object",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "post"
                    },
                    "dataSourceId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticValidationResult": {
                "type": "object",
                "properties": {
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "validationRequestId": {
                        "description": "",
                        "type": "post"
                    },
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "message": {
                        "description": "",
                        "type": "post"
                    },
                    "inputData": {
                        "description": "",
                        "type": "post"
                    },
                    "result": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticWriteDataRequest": {
                "type": "object",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "post"
                    },
                    "customAttributes": {
                        "description": "",
                        "type": "post"
                    },
                    "systemAttributes": {
                        "description": "",
                        "type": "post"
                    },
                    "dataSourceId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticWriteDataResponse": {
                "type": "object",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "post"
                    },
                    "dataSourceId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AnalyticsCronExpression": {
                "type": "object",
                "properties": {
                    "seconds": {
                        "description": "",
                        "type": "post"
                    },
                    "minutes": {
                        "description": "",
                        "type": "post"
                    },
                    "hours": {
                        "description": "",
                        "type": "post"
                    },
                    "dayOfMonth": {
                        "description": "",
                        "type": "post"
                    },
                    "months": {
                        "description": "",
                        "type": "post"
                    },
                    "dayOfWeek": {
                        "description": "",
                        "type": "post"
                    },
                    "years": {
                        "description": "",
                        "type": "post"
                    },
                    "timeZoneId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "Artifact": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "filename": {
                        "description": "",
                        "type": "post"
                    },
                    "type": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "ArtifactList": {
                "type": "object",
                "properties": {
                    "artifacts": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "AssetGroup": {
                "type": "object",
                "properties": {
                    "dataSourceId": {
                        "description": "",
                        "type": "post"
                    },
                    "assetSelectionFilter": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "headers": {
                        "description": "",
                        "type": "post"
                    },
                    "object": {
                        "description": "",
                        "type": "post"
                    },
                    "contentId": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "CommandInfo": {
                "type": "object",
                "properties": {
                    "commandName": {
                        "description": "",
                        "type": "post"
                    },
                    "commandClass": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "ContentDisposition": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "post"
                    },
                    "filename": {
                        "description": "",
                        "type": "post"
                    },
                    "parameters": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "DataFlavor": {
                "type": "object",
                "properties": {
                    "mimeType": {
                        "description": "",
                        "type": "post"
                    },
                    "humanPresentableName": {
                        "description": "",
                        "type": "post"
                    },
                    "primaryType": {
                        "description": "",
                        "type": "post"
                    },
                    "subType": {
                        "description": "",
                        "type": "post"
                    },
                    "mimeTypeSerializedObject": {
                        "description": "",
                        "type": "post"
                    },
                    "defaultRepresentationClassAsString": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassInputStream": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassReader": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassCharBuffer": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassByteBuffer": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassSerializable": {
                        "description": "",
                        "type": "post"
                    },
                    "representationClassRemote": {
                        "description": "",
                        "type": "post"
                    },
                    "flavorSerializedObjectType": {
                        "description": "",
                        "type": "post"
                    },
                    "flavorRemoteObjectType": {
                        "description": "",
                        "type": "post"
                    },
                    "flavorJavaFileListType": {
                        "description": "",
                        "type": "post"
                    },
                    "flavorTextType": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "DataHandler": {
                "type": "object",
                "properties": {
                    "transferDataFlavors": {
                        "description": "",
                        "type": "post"
                    },
                    "preferredCommands": {
                        "description": "",
                        "type": "post"
                    },
                    "allCommands": {
                        "description": "",
                        "type": "post"
                    },
                    "contentType": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "content": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "DataSource": {
                "type": "object",
                "properties": {
                    "contentType": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "post"
                    },
                    "severity": {
                        "description": "",
                        "type": "post"
                    },
                    "detail": {
                        "description": "",
                        "type": "post"
                    },
                    "message": {
                        "description": "",
                        "type": "post"
                    },
                    "parameters": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "Field": {
                "type": "object",
                "properties": {
                    "fieldId": {
                        "description": "",
                        "type": "post"
                    },
                    "fullyQualifiedPortName": {
                        "description": "",
                        "type": "post"
                    },
                    "dataType": {
                        "description": "",
                        "type": "post"
                    },
                    "engUnit": {
                        "description": "",
                        "type": "post"
                    },
                    "data": {
                        "description": "",
                        "type": "post"
                    },
                    "queryCriteria": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "HttpExecutionRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "",
                        "type": "post"
                    },
                    "httpMethod": {
                        "description": "",
                        "type": "post"
                    },
                    "httpHeaders": {
                        "description": "",
                        "type": "post"
                    },
                    "inputData": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "HttpHeader": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "value": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "Job": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "state": {
                        "description": "",
                        "type": "post"
                    },
                    "createdBy": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedBy": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "JobEntryPage": {
                "type": "object",
                "properties": {
                    "currentPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "maximumPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "currentPageNumber": {
                        "description": "",
                        "type": "post"
                    },
                    "totalElements": {
                        "description": "",
                        "type": "post"
                    },
                    "totalPages": {
                        "description": "",
                        "type": "post"
                    },
                    "jobs": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "JobEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "jobId": {
                        "description": "",
                        "type": "post"
                    },
                    "fireTime": {
                        "description": "",
                        "type": "post"
                    },
                    "scheduledFireTime": {
                        "description": "",
                        "type": "post"
                    },
                    "cron": {
                        "description": "",
                        "type": "post"
                    },
                    "timeZoneId": {
                        "description": "",
                        "type": "post"
                    },
                    "httpMethod": {
                        "description": "",
                        "type": "post"
                    },
                    "url": {
                        "description": "",
                        "type": "post"
                    },
                    "httpStatusCode": {
                        "description": "",
                        "type": "post"
                    },
                    "statusMessage": {
                        "description": "",
                        "type": "post"
                    },
                    "result": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "MediaType": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "post"
                    },
                    "subType": {
                        "description": "",
                        "type": "post"
                    },
                    "parameters": {
                        "description": "",
                        "type": "post"
                    },
                    "wildcardType": {
                        "description": "",
                        "type": "post"
                    },
                    "wildcardSubtype": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "Model": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "modelKey": {
                        "description": "",
                        "type": "post"
                    },
                    "modelName": {
                        "description": "",
                        "type": "post"
                    },
                    "modelVersion": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "filename": {
                        "description": "",
                        "type": "post"
                    },
                    "md5": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "ModelPage": {
                "type": "object",
                "properties": {
                    "currentPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "maximumPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "currentPageNumber": {
                        "description": "",
                        "type": "post"
                    },
                    "totalElements": {
                        "description": "",
                        "type": "post"
                    },
                    "totalPages": {
                        "description": "",
                        "type": "post"
                    },
                    "models": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "MultipartBody": {
                "type": "object",
                "properties": {
                    "allAttachments": {
                        "description": "",
                        "type": "post"
                    },
                    "childAttachments": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationArtifact": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "type": {
                        "description": "",
                        "type": "post"
                    },
                    "filename": {
                        "description": "",
                        "type": "post"
                    },
                    "stepId": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationArtifactList": {
                "type": "object",
                "properties": {
                    "orchestrationArtifacts": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "author": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationEntryPage": {
                "type": "object",
                "properties": {
                    "currentPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "maximumPageSize": {
                        "description": "",
                        "type": "post"
                    },
                    "currentPageNumber": {
                        "description": "",
                        "type": "post"
                    },
                    "totalElements": {
                        "description": "",
                        "type": "post"
                    },
                    "totalPages": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationEntries": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationExecutionContext": {
                "type": "object",
                "properties": {
                    "assetId": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationConfigurationID": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationExecutionRequestID": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticName": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticVersion": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticExecutionRequestID": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationExecutionRequest": {
                "type": "object",
                "properties": {
                    "orchestrationConfigurationID": {
                        "description": "",
                        "type": "post"
                    },
                    "assetId": {
                        "description": "",
                        "type": "post"
                    },
                    "assetDataFieldsMap": {
                        "description": "",
                        "type": "post"
                    },
                    "modelGroupKey": {
                        "description": "",
                        "type": "post"
                    },
                    "dataSource": {
                        "description": "",
                        "type": "post"
                    },
                    "customAttributes": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationExecutionResult": {
                "type": "object",
                "properties": {
                    "orchestrationRequestId": {
                        "description": "",
                        "type": "post"
                    },
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationExecutionStatus": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationExecutionStatus": {
                "type": "object",
                "properties": {
                    "contextId": {
                        "description": "",
                        "type": "post"
                    },
                    "assetId": {
                        "description": "",
                        "type": "post"
                    },
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "fieldTagMap": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationStepStatus": {
                        "description": "",
                        "type": "post"
                    },
                    "startTime": {
                        "description": "",
                        "type": "post"
                    },
                    "endTime": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "bpmnXml": {
                        "description": "",
                        "type": "post"
                    },
                    "inputData": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticInputData": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationResult": {
                "type": "object",
                "properties": {
                    "contextId": {
                        "description": "",
                        "type": "post"
                    },
                    "orchestrationStatus": {
                        "description": "",
                        "type": "post"
                    },
                    "name": {
                        "description": "",
                        "type": "post"
                    },
                    "output": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticOutputData": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationStepStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticId": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticName": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticVersion": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticRequestId": {
                        "description": "",
                        "type": "post"
                    },
                    "stepId": {
                        "description": "",
                        "type": "post"
                    },
                    "iterationId": {
                        "description": "",
                        "type": "post"
                    },
                    "startTime": {
                        "description": "",
                        "type": "post"
                    },
                    "endTime": {
                        "description": "",
                        "type": "post"
                    },
                    "output": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "OrchestrationValidationResult": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "analyticValidationStatusMap": {
                        "description": "",
                        "type": "post"
                    }
                }
            },
            "TagNamesDefaultQuery": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "post"
                    },
                    "defaultTagNameQuery": {
                        "description": "",
                        "type": "post"
                    },
                    "fieldNameSpecifier": {
                        "description": "",
                        "type": "post"
                    },
                    "tagNameSpecifier": {
                        "description": "",
                        "type": "post"
                    },
                    "author": {
                        "description": "",
                        "type": "post"
                    },
                    "description": {
                        "description": "",
                        "type": "post"
                    },
                    "createdTimestamp": {
                        "description": "",
                        "type": "post"
                    },
                    "updatedTimestamp": {
                        "description": "",
                        "type": "post"
                    }
                }
            }
        }
    }
}