{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Intelligent Mapping",
        "description": "Intelligent Mapping services for geospatial data management and viewing",
        "termsOfService": ""
    },
    "servers": [
        "https\/"
    ],
    "paths": {
        "\/v1\/collections": {
            "get": {
                "summary": "List all data collections for a customer",
                "description": "Returns an array containing the names of all data collections for the\nspecified customer.\n",
                "operationId": "ReturnsAnArrayContainingTheNamesOfAllDataCollectionsForThespecifiedCustomer",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/collections\/{collectionName}": {
            "get": {
                "summary": "Return all data for a collection",
                "description": "Returns the full GeoJSON FeatureCollection uploaded for this collection.\nAll GeoJSON Features will be as originally uploaded with the addition of\na featureId attribute that uniquely identifies the feature across all\nyour collections.\n",
                "operationId": "ReturnsTheFullGeojsonFeaturecollectionUploadedForThisCollectionallGeojsonFeaturesWillBe",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Add a new collection",
                "description": "Add a new collection of data in the form of a GeoJSON FeatureCollection.\nAll coordinates must be in EPSG:4326 (WGS84) (for further details see\nhttp:\/\/epsg.io\/4326). Any feature that is not compliant with the GeoJSON\nspecification will not be stored. If the specified collection already\nexists, the geospatial data will be appended to the existing data.\n",
                "operationId": "AddANewCollectionOfDataInTheFormOfAGeojsonFeaturecollectionallCoordinatesMustBeInEp",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Geospatial data for the collection."
                    }
                ]
            },
            "put": {
                "summary": "Add a new collection",
                "description": "Add a new collection of data in the form of a GeoJSON FeatureCollection.\nAll coordinates must be in EPSG:4326 (WGS84) (for further details see\nhttp:\/\/epsg.io\/4326). Any feature that is not compliant with the GeoJSON\nspecification will not be stored. Any feature that doesn't contain an id\nwill not be stored. If the specified collection already exists, the\ngeospatial data will be appended to the existing data. Features with matching\nid's are overwritten.\n",
                "operationId": "AddANewCollectionOfDataInTheFormOfAGeojsonFeaturecollectionallCoordinatesMustBeInEp",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Geospatial data for the collection."
                    }
                ]
            },
            "delete": {
                "summary": "Delete a collection",
                "description": "Delete the collection of data specified by the collection name.\n",
                "operationId": "DeleteTheCollectionOfDataSpecifiedByTheCollectionName",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/collections\/{collectionName}\/spatial-query\/bbox-interacts": {
            "get": {
                "summary": "Return collection features in specified bounding box",
                "description": "Returns all features in the specified collection that exist fully or\npartially within the specified bounding box. The bounding box is defined\nby two coordinates in the EPSG:4326 (WGS84) (for further details see\nhttp:\/\/epsg.io\/4326):\n\n* left (longitude), bottom (latitude)\n\n* right (longitude), top (latitude)\n",
                "operationId": "ReturnsAllFeaturesInTheSpecifiedCollectionThatExistFullyOrpartiallyWithinTheSpecifiedB",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/collections\/{collectionName}\/features": {
            "get": {
                "summary": "Return feature",
                "description": "Returns GeoJSON of type FeatureCollection containing all GeoJSON features\nfrom the named collection with a matching GeoJSON id.\n",
                "operationId": "ReturnsGeojsonOfTypeFeaturecollectionContainingAllGeojsonFeaturesfromTheNamedCollectionW",
                "deprecated": 0,
                "parameters": []
            },
            "delete": {
                "summary": "Delete from the named collection all features with a matching GeoJSON id.",
                "description": "Delete from the named collection all features with a matching GeoJSON id. This could be 0, 1 or many features.\n",
                "operationId": "DeleteFromTheNamedCollectionAllFeaturesWithAMatchingGeojsonIdThisCouldBe01OrManyF",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Insert an individual feature into a collection.",
                "description": "Insert a new feature into the the named collection. The GeoJSON id is used to identify the feature.\nThe GeoJSON id included in the url must match the top level id member of the feature provided.\n",
                "operationId": "InsertANewFeatureIntoTheTheNamedCollectionTheGeojsonIdIsUsedToIdentifyTheFeaturethe",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Update all features in a collection with a matching GeoJSON id.",
                "description": "Updates the attributes and geometry of matching features in the named collection.  This could be 0, 1 or many features.\n",
                "operationId": "UpdatesTheAttributesAndGeometryOfMatchingFeaturesInTheNamedCollectionThisCouldBe01",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/collections\/{collectionName}\/collectionSize": {
            "get": {
                "summary": "Return the size of a collection.",
                "description": "Returns the size of the specified collection to decide whether to use the whole collection for spatial query\nor not.\n",
                "operationId": "ReturnsTheSizeOfTheSpecifiedCollectionToDecideWhetherToUseTheWholeCollectionForSpati",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/collections\/{collectionName}\/spatial-query": {
            "post": {
                "summary": "For 'within' operator - find all points within an area.\nFor 'nearest' operator - return the nearest point to the one specified.\nFor 'lineIntersectsLine' - find all points of intersection between two linestrings.\n",
                "description": "'Within' returns GeoGJSON of type FeatureCollection containing all GeoJSON features within the provided polygon.\n'Nearest' returns a FeatureCollection with the longitude and latitude of the nearest point.\n'LineIntersectsLine' returns a FeatureCollection containing all points of intersection as GeoJSON features.\n",
                "operationId": "WithinReturnsGeogjsonOfTypeFeaturecollectionContainingAllGeojsonFeaturesWithinTheProvide",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "operator",
                        "in": "query",
                        "description": "The type of spatial query. Can be 'within', 'nearest' or 'lineIntersectsLine'\n"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Geospatial data for the collection."
                    }
                ]
            }
        },
        "\/v1\/collections\/{collectionName}\/text": {
            "get": {
                "summary": "Free text search of a feature collection",
                "description": "Returns GeoJSON of type FeatureCollection containing all GeoJSON features from the named collection that match\nthe supplied search string.\n\nThe search text consists of one or more strings that can be space or comma separated. A match with a given\nfeature occurs only if an exact match can be found for each of the strings in the search text amongst a\nconcatenation of the values of child members of the top level 'properties' member of the feature,\ntogether with the value of its GeoJSON id. The matc",
                "operationId": "ReturnsGeojsonOfTypeFeaturecollectionContainingAllGeojsonFeaturesFromTheNamedCollection",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The search text. Consists of a list of one or more strings.  The strings in the list can be space or comma\n separated.\n"
                    }
                ]
            }
        },
        "\/v1\/collections\/{collectionName}\/cluster": {
            "get": {
                "summary": "Returns clustering data for collection features in specified bounding box",
                "description": "Returns Clustering data for the specified collection that exist fully\n or partially within the specified bounding box. The bounding box is\n defined by two coordinates in the EPSG:4326 (WGS84)\n (for further details see http:\/\/epsg.io\/4326):\n * left (longitude), bottom (latitude)\n * right (longitude), top (latitude)\n",
                "operationId": "ReturnsClusteringDataForTheSpecifiedCollectionThatExistFullyOrPartiallyWithinTheSpecif",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps": {
            "get": {
                "summary": "List all maps for a customer",
                "description": "Returns an array of maps for the specified customer. The array contains\nthe name and identifier for each map.\n",
                "operationId": "ReturnsAnArrayOfMapsForTheSpecifiedCustomerTheArrayContainstheNameAndIdentifierForEa",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create a map",
                "description": "Creates a map with the specified name.\n",
                "operationId": "CreatesAMapWithTheSpecifiedName",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps\/{mapId}": {
            "get": {
                "summary": "Return map details",
                "description": "For the specified map identifier, returns the map properties and an\narray of the associated layers. For each layer, the identifier, name and\nUniform Resource Identifier (URI) are returned.\n",
                "operationId": "ForTheSpecifiedMapIdentifierReturnsTheMapPropertiesAndAnarrayOfTheAssociatedLayersFor",
                "deprecated": 0,
                "parameters": []
            },
            "delete": {
                "summary": "Delete a map",
                "description": "Deletes the map with the specified identifier. Any layers associated\nwith the map are also deleted.\n",
                "operationId": "DeletesTheMapWithTheSpecifiedIdentifierAnyLayersAssociatedwithTheMapAreAlsoDeleted",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Rename a map",
                "description": "Updates the name of the map that has the specified identifier.\n",
                "operationId": "UpdatesTheNameOfTheMapThatHasTheSpecifiedIdentifier",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps\/{mapId}\/orderlayers": {
            "post": {
                "summary": "Update order of layers",
                "description": "Updates the order of layers for a given map.\n",
                "operationId": "UpdatesTheOrderOfLayersForAGivenMap",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps\/{mapId}\/layers": {
            "post": {
                "summary": "Create a new layer",
                "description": "Creates a new layer and associates it with the specified map.\n",
                "operationId": "CreatesANewLayerAndAssociatesItWithTheSpecifiedMap",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps\/{mapId}\/layers\/{layerId}": {
            "get": {
                "summary": "Return layer details",
                "description": "For the layer identified by the map and layer identifiers, returns the\nlayer details (identifier, name, Uniform Resource Identifier (URI), and\nvisibility).\n",
                "operationId": "ForTheLayerIdentifiedByTheMapAndLayerIdentifiersReturnsThelayerDetailsIdentifierNameU",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Update the layer properties",
                "description": "For the layer identified by the specified map and layer identifiers,\nupdates the layer properties.\n",
                "operationId": "ForTheLayerIdentifiedByTheSpecifiedMapAndLayerIdentifiersupdatesTheLayerProperties",
                "deprecated": 0,
                "parameters": []
            },
            "delete": {
                "summary": "Delete a layer",
                "description": "Deletes the layer identified by the specified map and layer identifiers.\n",
                "operationId": "DeletesTheLayerIdentifiedByTheSpecifiedMapAndLayerIdentifiers",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/v1\/maps\/{mapId}\/layers\/{layerId}\/style": {
            "get": {
                "summary": "Retrieves style data for a layer",
                "description": "Retrieve style data for the layer identified by the specified map and\nlayer identifiers.\n",
                "operationId": "RetrieveStyleDataForTheLayerIdentifiedByTheSpecifiedMapAndlayerIdentifiers",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Update the style data for a layer",
                "description": "Update the style data for the layer identified by the specified map and\nlayer identifiers.\n",
                "operationId": "UpdateTheStyleDataForTheLayerIdentifiedByTheSpecifiedMapAndlayerIdentifiers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Geospatial data for the collection."
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Collections": {
                "type": "object",
                "properties": {
                    "collections": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "AddCollectionSuccessSchema": {
                "type": "object",
                "properties": {
                    "total_features": {
                        "description": "",
                        "type": "put"
                    },
                    "inserted_features": {
                        "description": "",
                        "type": "put"
                    },
                    "invalid_features": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "UpdateFeaturesSuccessSchema": {
                "type": "object",
                "properties": {
                    "updated_features": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "DeleteFeaturesSuccessSchema": {
                "type": "object",
                "properties": {
                    "deleted_features": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "GetCollectionSizeSchema": {
                "type": "object",
                "properties": {
                    "collection_size": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "QueryGeometry": {
                "type": "object",
                "properties": {
                    "geometry": {
                        "description": "",
                        "type": "put"
                    },
                    "longitude": {
                        "description": "",
                        "type": "put"
                    },
                    "latitude": {
                        "description": "",
                        "type": "put"
                    },
                    "lines": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "MapCreated": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "Layer": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "put"
                    },
                    "name": {
                        "description": "",
                        "type": "put"
                    },
                    "uri": {
                        "description": "",
                        "type": "put"
                    },
                    "visible": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "Map": {
                "type": "object",
                "properties": {
                    "base_map": {
                        "description": "",
                        "type": "put"
                    },
                    "id": {
                        "description": "",
                        "type": "put"
                    },
                    "map_center": {
                        "description": "",
                        "type": "put"
                    },
                    "name": {
                        "description": "",
                        "type": "put"
                    },
                    "zoom_level": {
                        "description": "",
                        "type": "put"
                    },
                    "layers": {
                        "description": "",
                        "type": "put"
                    }
                }
            },
            "LayerCreated": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "put"
                    }
                }
            }
        }
    }
}